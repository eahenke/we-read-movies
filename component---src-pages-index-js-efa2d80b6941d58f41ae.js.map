{"version":3,"sources":["webpack:///./src/components/episode-link/index.js","webpack:///./src/components/episode-link/episode-link.jsx","webpack:///./src/components/current-episode/current-episode.jsx","webpack:///./src/components/current-episode/index.js","webpack:///./src/components/episode-preview/index.js","webpack:///./src/components/episode-preview/episode-preview.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/current-episode/current-episode.module.css","webpack:///./src/pages/index.module.css","webpack:///./src/components/episode-preview/episode-preview.module.css"],"names":["EpisodeLink","children","slug","aria-label","to","toLowerCase","CurrentEpisode","desc","num","title","date","src","duration","description","cover","className","styles","episodeContainer","coverContainer","getFluidImage","image","episodeInfo","inset","meta","truncateToNextClosestWord","readMore","playerContainer","EpisodePreview","withFlattenedQuery","data","currentEpisode","currentEpisodes","episodes","currentEpisodeHeading","episodeList","map","ep","previewWrapper","key","module","exports"],"mappings":"uOAEeA,ECEK,SAAH,OAAMC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAI,OACjC,kBAAC,OAAI,CAACC,aAAYD,EAAME,GAAE,aAAeF,EAAKG,eACzCJ,I,iCCUT,ICdeK,EDcQ,SAAH,OAJOC,EAIDC,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAOZ,EAAI,EAAJA,KAAI,OAC/E,kBAAC,IAAG,CAACa,UAAWC,IAAOC,kBACnB,kBAAC,IAAG,CAACF,UAAWC,IAAOE,gBACnB,kBAAC,EAAW,CAAChB,KAAMA,GACf,kBAAC,IAAY,CAACS,IAAKQ,YAAcL,aAAK,EAALA,EAAOM,WAGhD,kBAAC,IAAG,CAACL,UAAWC,IAAOK,YAAaC,MAAM,MACtC,0BAAMP,UAAU,mBACZ,kBAAC,EAAW,CAACb,KAAMA,GACf,kBAAC,IAAY,CAACM,IAAKA,EAAKC,MAAOA,MAGvC,yBAAKM,UAAWC,IAAOO,MACnB,0BAAMR,UAAWC,IAAON,MAAOA,IAEnC,uBAAGK,UAAWC,IAAOH,mBApBF,KAAJN,EAoBsCM,KApBtCN,EAAO,IACvBiB,YAA0BjB,EAFJ,IAEoC,SAoBzD,0BAAMQ,UAAWC,IAAOS,UACpB,kBAAC,EAAW,CAACvB,KAAMA,GAAK,cAE5B,yBAAKa,UAAWC,IAAOU,iBACnB,kBAAC,IAAW,CAACd,SAAUA,EAAUD,IAAKA,Q,qBEnCvCgB,ECQQ,SAAH,OAAMb,EAAK,EAALA,MAAOJ,EAAI,EAAJA,KAAMF,EAAG,EAAHA,IAAKN,EAAI,EAAJA,KAAMO,EAAK,EAALA,MAAK,OACnD,kBAAC,IAAG,KACA,kBAAC,EAAW,CAACP,KAAMA,GACf,kBAAC,IAAG,KACA,kBAAC,IAAY,CAACS,IAAKQ,YAAcL,aAAK,EAALA,EAAOM,WAGhD,kBAAC,IAAG,KACA,0BAAML,UAAU,qBACZ,kBAAC,EAAW,CAACb,KAAMA,GACf,kBAAC,IAAY,CAACM,IAAKA,EAAKC,MAAOA,MAGvC,0BAAMM,UAAWC,IAAOO,MAAOb,M,qBCmC5BkB,uBA/CG,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACXC,EAAiBD,EAAKE,gBAAgB,GACpCC,EAAaH,EAAbG,SAER,OACI,kBAAC,IAAU,KACP,kBAAC,IAAG,CAACvB,MAAM,aACX,wBAAIM,UAAWC,IAAOiB,uBAAsB,mBAC5C,kBAAC,EAAmBH,GACpB,wBAAIf,UAAU,mBAAiB,iBAC/B,yBAAKA,UAAWC,IAAOkB,aAClBF,EAASG,KAAI,SAAAC,GAAE,OACZ,yBAAKrB,UAAWC,IAAOqB,eAAgBC,IAAKF,EAAG3B,OAC3C,kBAAC,EAAmB2B,a,qBCvB5CG,EAAOC,QAAU,CAAC,iBAAmB,mDAAmD,eAAiB,iDAAiD,YAAc,8CAA8C,QAAU,yCAAyC,KAAO,sCAAsC,KAAO,sCAAsC,gBAAkB,kDAAkD,YAAc,6CAA6C,SAAW,6C,qBCA7eD,EAAOC,QAAU,CAAC,sBAAwB,+CAA+C,YAAc,sC,qBCAvGD,EAAOC,QAAU,CAAC,KAAO","file":"component---src-pages-index-js-efa2d80b6941d58f41ae.js","sourcesContent":["import EpisodeLink from './episode-link';\n\nexport default EpisodeLink;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst EpisodeLink = ({ children, slug }) => (\n    <Link aria-label={slug} to={`/episodes/${slug.toLowerCase()}`}>\n        {children}\n    </Link>\n);\n\nEpisodeLink.propTypes = {\n    children: node.isRequired,\n    slug: string.isRequired\n};\n\nexport default EpisodeLink;\n","import React from 'react';\nimport { string, number, shape } from 'prop-types';\nimport Box from '../layout/box';\nimport AudioPlayer from '../media/audio-player';\nimport EpisodeCover from '../episode-cover';\nimport EpisodeTitle from '../episode-title';\nimport EpisodeLink from '../episode-link';\nimport styles from './current-episode.module.css';\nimport { coverArtPropType } from '../../prop-types';\nimport { truncateToNextClosestWord, getFluidImage } from '../../util';\n\nconst SHORT_DESCRIPTION_LENGTH = 150;\nfunction formatDescription(desc = '') {\n    return truncateToNextClosestWord(desc, SHORT_DESCRIPTION_LENGTH, '...');\n}\n\nconst CurrentEpisode = ({ num, title, date, src, duration, description, cover, slug }) => (\n    <Box className={styles.episodeContainer}>\n        <Box className={styles.coverContainer}>\n            <EpisodeLink slug={slug}>\n                <EpisodeCover src={getFluidImage(cover?.image)} />\n            </EpisodeLink>\n        </Box>\n        <Box className={styles.episodeInfo} inset=\"md\">\n            <span className=\"section-heading\">\n                <EpisodeLink slug={slug}>\n                    <EpisodeTitle num={num} title={title} />\n                </EpisodeLink>\n            </span>\n            <div className={styles.meta}>\n                <span className={styles.date}>{date}</span>\n            </div>\n            <p className={styles.description}>{formatDescription(description)}</p>\n            <span className={styles.readMore}>\n                <EpisodeLink slug={slug}>Read more</EpisodeLink>\n            </span>\n            <div className={styles.playerContainer}>\n                <AudioPlayer duration={duration} src={src} />\n            </div>\n        </Box>\n    </Box>\n);\nCurrentEpisode.propTypes = {\n    cover: shape(coverArtPropType),\n    date: string.isRequired,\n    description: string.isRequired,\n    duration: string,\n    num: number.isRequired,\n    slug: string.isRequired,\n    src: string,\n    title: string.isRequired\n};\n\nexport default CurrentEpisode;\n","import CurrentEpisode from './current-episode';\n\nexport default CurrentEpisode;\n","import EpisodePreview from './episode-preview';\n\nexport default EpisodePreview;\n","import React from 'react';\nimport { string, number, shape } from 'prop-types';\nimport Box from '../layout/box';\nimport EpisodeCover from '../episode-cover';\nimport EpisodeTitle from '../episode-title';\nimport EpisodeLink from '../episode-link';\nimport { coverArtPropType } from '../../prop-types';\nimport styles from './episode-preview.module.css';\nimport { getFluidImage } from '../../util';\n\nconst EpisodePreview = ({ cover, date, num, slug, title }) => (\n    <Box>\n        <EpisodeLink slug={slug}>\n            <Box>\n                <EpisodeCover src={getFluidImage(cover?.image)} />\n            </Box>\n        </EpisodeLink>\n        <Box>\n            <span className=\"paragraph-heading\">\n                <EpisodeLink slug={slug}>\n                    <EpisodeTitle num={num} title={title} />\n                </EpisodeLink>\n            </span>\n            <span className={styles.meta}>{date}</span>\n        </Box>\n    </Box>\n);\n\nEpisodePreview.propTypes = {\n    cover: shape(coverArtPropType),\n    date: string,\n    num: number,\n    slug: string,\n    title: string\n};\n\nexport default EpisodePreview;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { arrayOf, shape } from 'prop-types';\nimport { episodePropType } from '../prop-types';\nimport { withFlattenedQuery } from '../hocs';\nimport PageLayout from '../components/page-layout';\nimport Seo from '../components/seo';\nimport CurrentEpisode from '../components/current-episode';\nimport EpisodePreview from '../components/episode-preview';\nimport styles from './index.module.css';\n\nconst IndexPage = ({ data }) => {\n    const currentEpisode = data.currentEpisodes[0];\n    const { episodes } = data;\n\n    return (\n        <PageLayout>\n            <Seo title=\"Episodes\" />\n            <h1 className={styles.currentEpisodeHeading}>Current Episode</h1>\n            <CurrentEpisode {...currentEpisode} />\n            <h2 className=\"section-heading\">Past Episodes</h2>\n            <div className={styles.episodeList}>\n                {episodes.map(ep => (\n                    <div className={styles.previewWrapper} key={ep.title}>\n                        <EpisodePreview {...ep} />\n                    </div>\n                ))}\n            </div>\n        </PageLayout>\n    );\n};\n\n// TODO: fix prop types to reflect query\nIndexPage.propTypes = {\n    data: shape({\n        currentEpisodes: arrayOf(shape(episodePropType))\n    })\n};\n\nexport const IndexPageQuery = graphql`\n    query CurrentEpisode {\n        currentEpisodes: allEpisodesJson(sort: { fields: [num], order: DESC }, limit: 1) {\n            edges {\n                node {\n                    ...episodeFullFragment\n                }\n            }\n        }\n        episodes: allEpisodesJson(sort: { fields: [num], order: DESC }, skip: 1) {\n            edges {\n                node {\n                    ...episodePreviewFragment\n                }\n            }\n        }\n    }\n`;\n\nexport default withFlattenedQuery(IndexPage);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"episodeContainer\":\"current-episode-module--episode-container--Hyhjn\",\"coverContainer\":\"current-episode-module--cover-container--kQ7mi\",\"episodeInfo\":\"current-episode-module--episode-info--4_Z0W\",\"divider\":\"current-episode-module--divider--2JWm4\",\"meta\":\"current-episode-module--meta--3s1v2\",\"date\":\"current-episode-module--date--1XWmG\",\"playerContainer\":\"current-episode-module--player-container--2v1a5\",\"description\":\"current-episode-module--description--12g4V\",\"readMore\":\"current-episode-module--read-more--2e66g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentEpisodeHeading\":\"index-module--current-episode-heading--1ipoF\",\"episodeList\":\"index-module--episode-list--2JzGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"episode-preview-module--meta--3IuPG\"};"],"sourceRoot":""}