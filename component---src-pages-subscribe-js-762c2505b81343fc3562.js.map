{"version":3,"sources":["webpack:///./src/components/layout/box/box.jsx","webpack:///./src/components/layout/box/index.js","webpack:///./src/hocs/with-flattened-query.js","webpack:///./src/components/subscription-platform/subscription-platform.module.css","webpack:///./src/components/subscription-platform/subscription-platform.jsx","webpack:///./src/components/subscription-platform/index.js","webpack:///./src/pages/subscribe.js","webpack:///./src/pages/subscribe.module.css"],"names":["Box","children","className","inset","cx","withFlattenedQuery","Component","props","dataProps","Object","keys","data","reduce","key","json","flattened","edges","map","edge","node","module","exports","ICON_COMPONENTS","SPOTIFY","Spotify","ITUNES","ItunesNote","RSS","Rss","GooglePodcast","SubscriptionPlatform","name","url","IconComponent","toUpperCase","getIcon","styles","platform","href","size","SubscribePageQuery","publishedPlatforms","platforms","filter","p","title","platformList","platformWrapper"],"mappings":"yIAceA,EAVH,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,IAAaC,iBAAb,MAAyB,GAAzB,MAA6BC,aAA7B,MAAqC,KAArC,SACR,yBAAKD,UAAWE,IAAG,SAASD,EAASD,IAAaD,ICHvCD,O,+ICIf,IAWeK,EAXY,SAAAC,GAAS,OAAI,SAAAC,GACpC,IAAMC,EAAYC,OAAOC,KAAKH,EAAMI,MAAMC,QAAO,SAACD,EAAME,GACpD,IANUC,EAMJC,GANID,EAMiBP,EAAMI,KAAKE,IAL9BG,MAAQF,EAAKE,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAQ,GAQpD,OAFAR,EAAKE,GAAOE,EAELJ,IACR,IAEH,OAAO,kBAACL,EAAD,iBAAeC,EAAf,CAAsBI,KAAMH,Q,qBCbvCY,EAAOC,QAAU,CAAC,SAAW,gDAAgD,KAAO,8C,gNCM9EC,EAAkB,CACpBC,QAASC,IACTC,OAAQC,IACRC,IAAKC,IACL,kBAAmBC,KAOvB,IChBeC,EDgBc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC5BC,EALV,SAAiBF,GACb,YADwB,IAAXA,MAAO,IACbT,EAAgBS,EAAKG,eAINC,CAAQJ,GAE9B,OACI,kBAAC,IAAD,CAAK7B,UAAWkC,IAAOC,UACnB,kBAAC,IAAD,CAAcC,KAAMN,GAChB,kBAACC,EAAD,CAAeM,KAAM,KACrB,0BAAMrC,UAAWkC,IAAOL,MAAOA,M,iCEgBlCS,EAAkB,aAahBnC,uBA7CO,SAAC,GAAc,IAG3BoC,EAH0B,EAAX9B,KACb+B,UAE6BC,QAAO,SAAAC,GAAC,QAAMA,EAAEZ,OAErD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKa,MAAM,cACX,yCACA,yBAAK3C,UAAWkC,IAAOU,cAClBL,EAAmBxB,KAAI,SAAAoB,GAAQ,OAC5B,yBAAKnC,UAAWkC,IAAOW,gBAAiBlC,IAAKwB,EAASN,MAClD,kBAAC,EAAD,CAAsBA,KAAMM,EAASN,KAAMC,IAAKK,EAASL,gB,qBCpBjFZ,EAAOC,QAAU,CAAC,aAAe","file":"component---src-pages-subscribe-js-762c2505b81343fc3562.js","sourcesContent":["import React from 'react';\nimport { string, node, oneOf } from 'prop-types';\nimport cx from 'classnames';\n\nconst Box = ({ children, className = '', inset = 'xs' }) => (\n    <div className={cx(`inset-${inset}`, className)}>{children}</div>\n);\n\nBox.propTypes = {\n    children: node,\n    className: string,\n    inset: oneOf(['none', 'xs', 'sm', 'md', 'lg', 'xl'])\n};\n\nexport default Box;\n","import Box from './box';\n\nexport default Box;\n","import React from 'react';\n\nfunction getNodes(json) {\n    return json.edges ? json.edges.map(edge => edge.node) : [];\n}\n\nconst withFlattenedQuery = Component => props => {\n    const dataProps = Object.keys(props.data).reduce((data, key) => {\n        const flattened = getNodes(props.data[key]);\n        data[key] = flattened;\n\n        return data;\n    }, {});\n\n    return <Component {...props} data={dataProps} />;\n};\n\nexport default withFlattenedQuery;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"platform\":\"subscription-platform-module--platform--3ehgB\",\"name\":\"subscription-platform-module--name--sGhNu\"};","import React from 'react';\nimport { string } from 'prop-types';\nimport { GooglePodcast, ItunesNote, Rss, Spotify } from '../icons';\nimport Box from '../layout/box';\nimport ExternalLink from '../navigation/external-link';\nimport styles from './subscription-platform.module.css';\n\nconst ICON_COMPONENTS = {\n    SPOTIFY: Spotify,\n    ITUNES: ItunesNote,\n    RSS: Rss,\n    'GOOGLE PODCASTS': GooglePodcast\n};\n\nfunction getIcon(name = '') {\n    return ICON_COMPONENTS[name.toUpperCase()];\n}\n\nconst SubscriptionPlatform = ({ name, url }) => {\n    const IconComponent = getIcon(name);\n\n    return (\n        <Box className={styles.platform}>\n            <ExternalLink href={url}>\n                <IconComponent size={72} />\n                <span className={styles.name}>{name}</span>\n            </ExternalLink>\n        </Box>\n    );\n};\n\nSubscriptionPlatform.propTypes = {\n    name: string.isRequired,\n    url: string.isRequired\n};\n\nexport default SubscriptionPlatform;\n","import SubscriptionPlatform from './subscription-platform';\n\nexport default SubscriptionPlatform;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { withFlattenedQuery } from '../hocs';\nimport PageLayout from '../components/page-layout';\nimport SubscriptionPlatform from '../components/subscription-platform';\nimport Seo from '../components/seo';\nimport styles from './subscribe.module.css';\n\nconst SubscribePage = ({ data }) => {\n    const { platforms } = data;\n\n    const publishedPlatforms = platforms.filter(p => !!p.url);\n\n    return (\n        <PageLayout>\n            <Seo title=\"Subscribe\" />\n            <h1>Subscribe</h1>\n            <div className={styles.platformList}>\n                {publishedPlatforms.map(platform => (\n                    <div className={styles.platformWrapper} key={platform.name}>\n                        <SubscriptionPlatform name={platform.name} url={platform.url} />\n                    </div>\n                ))}\n            </div>\n        </PageLayout>\n    );\n};\n\n// TODO: fix prop types to reflect query\nSubscribePage.propTypes = {\n    data: shape({\n        platforms: arrayOf(\n            shape({\n                name: string.isRequired,\n                url: string.isRequired\n            })\n        )\n    })\n};\n\nexport const SubscribePageQuery = graphql`\n    query Platforms {\n        platforms: allPlatformsJson {\n            edges {\n                node {\n                    name\n                    url\n                }\n            }\n        }\n    }\n`;\n\nexport default withFlattenedQuery(SubscribePage);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"platformList\":\"subscribe-module--platformList--2Y_1d\"};"],"sourceRoot":""}